// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
apply from: "$gradle.ext.exoplayerSettingsDir/common_library_config.gradle"

// Configure the native build only if ffmpeg is present to avoid gradle sync
// failures if ffmpeg hasn't been built according to the README instructions.

android {

    ndkVersion "21.1.6352462"




    defaultConfig {
        ndk {
//            abiFilters 'armeabi-v7a'
            abiFilters 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                // Debug CMake build type causes video frames to drop,
                // so native library should always use Release build type.
                version "3.18.1"
                cppFlags "-std=c++11"
                cppFlags "-Wl,-Bsymbolic"
//                abiFilters 'armeabi-v7a'
                abiFilters 'arm64-v8a'
            }
        }
    }
}

if (project.file('src/main/jni/ffmpeg').exists()) {
    android.externalNativeBuild.cmake.path = 'src/main/jni/CMakeLists.txt'
    android.externalNativeBuild.cmake.version = '3.7.1+'
}

dependencies {
    implementation project(modulePrefix + 'library-decoder')
    // TODO(b/203752526): Remove this dependency.
    implementation project(modulePrefix + 'library-core')
    implementation 'androidx.annotation:annotation:' + androidxAnnotationVersion
    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
    compileOnly 'org.jetbrains.kotlin:kotlin-annotations-jvm:' + kotlinAnnotationsVersion
    testImplementation project(modulePrefix + 'testutils')
    testImplementation 'org.robolectric:robolectric:' + robolectricVersion
}

ext {
    javadocTitle = 'FFmpeg extension'
}
apply from: '../../javadoc_library.gradle'
